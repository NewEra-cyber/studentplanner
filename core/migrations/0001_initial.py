# Generated by Django 5.2.6 on 2025-10-20 14:39

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ResourceCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Resource Categories',
                'db_table': 'resource_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JKUATTimetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('course_code', models.CharField(max_length=20)),
                ('course_name', models.CharField(max_length=200)),
                ('venue', models.CharField(max_length=100)),
                ('activity_type', models.CharField(choices=[('lecture', '📚 Lecture'), ('lab', '💻 Lab'), ('study', '📖 Study Block'), ('workout', '💪 Workout'), ('chore', '🧹 Chore'), ('relationship', '❤️ Relationship Time'), ('skill', '🚀 Skill Development'), ('meal', '🍽️ Meal'), ('review', '📊 Review'), ('project', '🔨 Project Work'), ('break', '☕ Break'), ('commute', '🚗 Commute'), ('meeting', '👥 Meeting')], default='lecture', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jkuat_timetable', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['day', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='ActivityResource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('url', models.URLField()),
                ('resource_type', models.CharField(choices=[('website', '🌐 Website'), ('app', '📱 Mobile App'), ('course', '📚 Course'), ('tool', '🛠️ Tool'), ('video', '🎥 Video'), ('book', '📖 Book')], max_length=15)),
                ('activity_type', models.CharField(blank=True, choices=[('lecture', '📚 Lecture'), ('lab', '💻 Lab'), ('study', '📖 Study Block'), ('workout', '💪 Workout'), ('chore', '🧹 Chore'), ('relationship', '❤️ Relationship Time'), ('skill', '🚀 Skill Development'), ('meal', '🍽️ Meal'), ('review', '📊 Review'), ('project', '🔨 Project Work'), ('break', '☕ Break'), ('commute', '🚗 Commute'), ('meeting', '👥 Meeting')], max_length=20)),
                ('is_free', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='core.resourcecategory')),
            ],
            options={
                'db_table': 'activity_resources',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('activity_type', models.CharField(choices=[('lecture', '📚 Lecture'), ('lab', '💻 Lab'), ('study', '📖 Study Block'), ('workout', '💪 Workout'), ('chore', '🧹 Chore'), ('relationship', '❤️ Relationship Time'), ('skill', '🚀 Skill Development'), ('meal', '🍽️ Meal'), ('review', '📊 Review'), ('project', '🔨 Project Work'), ('break', '☕ Break'), ('commute', '🚗 Commute'), ('meeting', '👥 Meeting')], max_length=20)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_flexible', models.BooleanField(default=False)),
                ('preferred_time', models.CharField(choices=[('morning', 'Morning (6AM-12PM)'), ('afternoon', 'Afternoon (12PM-5PM)'), ('evening', 'Evening (5PM-9PM)'), ('night', 'Night (9PM-11PM)'), ('any', 'Any Time')], default='any', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'schedules',
                'ordering': ['day', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('priority', models.CharField(choices=[('low', '🔵 Low'), ('medium', '🟡 Medium'), ('high', '🔴 High')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('todo', '📝 To Do'), ('in_progress', '🔄 In Progress'), ('completed', '✅ Completed')], default='todo', max_length=15)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tasks',
                'ordering': ['priority', 'due_date'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('weight', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('height', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('course', models.CharField(blank=True, max_length=200)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('wake_up_time', models.TimeField(default='06:00:00')),
                ('sleep_time', models.TimeField(default='23:00:00')),
                ('current_phase', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('theme', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark'), ('auto', 'Auto')], default='light', max_length=10)),
                ('timezone', models.CharField(default='Africa/Nairobi', max_length=50)),
                ('streak_count', models.IntegerField(default=0)),
                ('total_points', models.IntegerField(default=0)),
                ('last_activity_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='ProgressTracker',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('tasks_completed', models.IntegerField(default=0)),
                ('study_hours', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('productivity_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'progress_tracker',
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='UserResourcePreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_favorite', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.activityresource')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_resource_preferences',
                'unique_together': {('user', 'resource')},
            },
        ),
        migrations.CreateModel(
            name='UserTimetable',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('unit_code', models.CharField(max_length=20)),
                ('unit_name', models.CharField(max_length=200)),
                ('venue', models.CharField(blank=True, max_length=100)),
                ('activity_type', models.CharField(choices=[('lecture', '📚 Lecture'), ('lab', '💻 Lab'), ('study', '📖 Study Block'), ('workout', '💪 Workout'), ('chore', '🧹 Chore'), ('relationship', '❤️ Relationship Time'), ('skill', '🚀 Skill Development'), ('meal', '🍽️ Meal'), ('review', '📊 Review'), ('project', '🔨 Project Work'), ('break', '☕ Break'), ('commute', '🚗 Commute'), ('meeting', '👥 Meeting')], default='lecture', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_timetable', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_timetable',
                'ordering': ['day', 'start_time'],
                'unique_together': {('user', 'day', 'start_time', 'unit_code')},
            },
        ),
    ]
